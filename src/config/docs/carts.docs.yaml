components:
  schemas:
    Files:
      description: thumbnail file
      type: string
      format: binary
    Thumbnails:
      description: thumbnail file name or link
      type: string
    Products:
      type: object
      properties:
        _id:
          description: Product ID
          type: string
        title:
          description: Name of the product.
          type: string
        code:
          description: Unique product code.
          type: string
        description:
          description: Brief description of the product.
          type: string
        thumbnails:
          description: Product image, can be a file or a link.
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Files'
            - $ref: '#/components/schemas/Thumbnails'
        price:
          description: Product price.
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
        category:
          description: Product category, type of product.
          type: string
        stock:
          description: Number of that product in stock.
          type: integer
          format: int64
          minimum: 0
        status:
          description: Product status.
          type: boolean
        owner:
          description: Product owner.
          type: string
      example:
        _id: 64c3cc0d06404a4aff717827  
        title: Camiseta Argentina
        code: 266-2372
        description: Camiseta Oficial Adidas Afa 3 Estrellas Campeones Del Mundo De Fútbol Para Hombre
        thumbnails: [Argentina 22 3 estrellas_1.webp]
        price: 35000
        category: camisetas futbol 
        stock: 25
        status: true
        owner: admin
    
    Product:
      descritpion: Product object from cart
      type: object
      properties:
        _id:
          type: object
          properties:
            - $ref: '#/components/schemas/Products'
        quantity:
          description: Product quantity
          type: number
          format: int64
          minimum: 0
      example:
        {
          _id: {
            _id: 64c3cc0d06404a4aff717827,
            title: CAMISETA ALTERNATIVA PUMA ITALIA,
            description: Camiseta Alternativa Puma Italia De Fútbol Para Hombre,
            price: 15999,
            thumbnails: [
                "Italia alternativa_1.webp"
            ],
            code: 962-2127,
            stock: 1,
            status: true,
            category: Camisetas,
            owner: admin
          },
          quantity: 1
        }

  responses:
    productsFromCart:
      type: array
      description: Array of products
      items:
        $ref: '#/components/schemas/Product'
    
    
    
    newCart:
      type: string
      example: '65724b1c1afaa7be37a23ffb'
    noauth:
      type: object
      properties:
        error:
          type: boolean
          description: Error status
        message:
          type: string
          description: Response message description
      example:
        error: true
        message: No auth token
    noPrivilages:
      type: object
      properties:
        error:
          type: boolean
          description: Error status
        message:
          type: string
          description: Response message description
      example:
        error: true
        message: User has no privileges
    notCreated:
      type: object
      properties:
        status:
          type: number
          description: status code
        message:
          type: string
          description: Error description
        from:
          type: string
          description: Error origin
      example:
        status: 404
        message: Cart not created
        from: POST /api/carts controller
    internal:
      type: object
      properties:
        status:
          type: number
          description: status code
        message:
          type: string
          description: Error description
        from:
          type: string
          description: Error origin
      example:
        status: 500
        message: Cart is not defined
        from": POST /api/carts controller
    updatedCart:
      type: object
      properties:
        updated:
          type: boolean
          description: update status
      example:
        updated: true

    notFoundPut:
      type: object
      properties:
        error:
          type: string
          description: Error description
      example:
        error: Product not found
    notFound:
      type: object
      properties:
        error:
          type: string
          description: Error description
      example:
        error: Product not found
    productDeleted:
      type: object
      properties:
        deleted:
          type: boolean
          description: Delete status
      example:
        deleted: true
    
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken

paths:
  /api/carts:
    post:
      summary: Create a cart
      tags:
        - Carts
      security:
        - cookieAuth: []
      responses:
        '201':
          description: Cart created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/newCart'
        '401':
          description: No user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noauth'
        '403':
          description: User has no privileges
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noPrivilages'
        '404':
          description: Cart could not be created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/notCreated'
        '500':
          description: inrernal server error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/internal'

    get:
      summary: Get all product from loged user cart
      tags:
        - Carts
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Carts found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/productsFromCart'
        '401':
          description: No user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noauth'
        '403':
          description: User has no privileges
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noPrivilages'
        '500':
          description: inrernal server error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/internal'

  /api/carts/{cid}:
    get:
      summary: Get product from specific cart
      tags:
        - Carts
      security:
        - cookieAuth: []
      parameters:
        - name: cid
          in: path
          description: cart ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Carts found
          content:
            application/json:
              schema:
                  $ref: '#/components/responses/productsFromCart'
        '401':
          description: No user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noauth'
        '403':
          description: User has no privileges
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noPrivilages'
        '500':
          description: inrernal server error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/internal'

  /api/carts/{pid}:
    put:
      summary: Update product in cart
      tags:
        - Carts
      security:
        - cookieAuth: []
      parameters:
        - name: pid
          in: path
          description: product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/updatedCart'
        '401':
          description: No user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noauth'
        '403':
          description: User has no privileges
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noPrivilages'
        '404':
          description: Product o Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/notFoundPut'
        '500':
          description: inrernal server error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/internal'
        
    delete:
      summary: Delete cart
      tags:
        - Carts
      security:
        - cookieAuth: []
      parameters:
        - name: pid
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart deleted
          content:
            application/json:
              schema:
                $ref: '#/components/responses/productDeleted'
        '401':
          description: No user logged in
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noauth'
        '403':
          description: User has no privileges
          content:
            application/json:
              schema:
                $ref: '#/components/responses/noPrivilages'
        '404':
          description: Cart or Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/notFoundPut'
        '500':
          description: inrernal server error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/internal'